// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique @db.VarChar(50)
  email        String   @unique @db.VarChar(100)
  passwordHash String   @map("password_hash") @db.VarChar(255)
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("users")
  @@index([username])
  @@index([email])
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(100)
  description String   @db.Text
  price       Decimal  @db.Decimal(10, 2)
  imageUrl    String?  @map("image_url") @db.VarChar(255)
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relations
  orderItems OrderItem[]

  @@map("products")
  @@index([isActive])
}

model Order {
  id              Int         @id @default(autoincrement())
  orderNumber     String      @unique @map("order_number") @db.VarChar(20)
  customerName    String      @map("customer_name") @db.VarChar(100)
  customerEmail   String      @map("customer_email") @db.VarChar(100)
  customerPhone   String      @map("customer_phone") @db.VarChar(20)
  deliveryAddress String      @map("delivery_address") @db.Text
  status          OrderStatus @default(NEW)
  totalAmount     Decimal     @map("total_amount") @db.Decimal(10, 2)
  createdAt       DateTime    @default(now()) @map("created_at")
  updatedAt       DateTime    @updatedAt @map("updated_at")

  // Relations
  items OrderItem[]

  @@map("orders")
  @@index([status])
  @@index([orderNumber])
  @@index([customerEmail])
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int     @map("order_id")
  productId Int     @map("product_id")
  quantity  Int
  unitPrice Decimal @map("unit_price") @db.Decimal(10, 2)
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])

  @@map("order_items")
  @@index([orderId])
  @@index([productId])
}

enum OrderStatus {
  NEW
  PAID
  READY_FOR_DELIVERY
}
